const configmain = require('../../config/config.json');
const configchannel = require('../../config/channels.json');
const configonoff = require('../../config/onoff.json');
const configrole = require('../../config/roles.json');
const lang = require('../../.' + configmain.lang);
const chalk = require('chalk');
const { DateTime } = require('luxon');
const timeFormat = 'LL'+'/'+'dd'+'/'+'yyyy'+'-'+'h'+':'+'mm'+':'+'ss'+'-'+'a';
const format2 = 'yyyy'+'-'+'LL'+'-'+'dd'+"'T'"+'hh'+':'+'mm'+':'+'ss'+'.'+'SSS'+'ZZ';
require('dotenv').config();

module.exports = {
    name: 'react',
    aliases: ['reaction'],
    description: 'Reacting on the reaction message for self assign Roles',
    guildOnly: true,
    async execute(message, args, commandName, client, Discord) {
        const SQLite = require("better-sqlite3");
        const sql_Onoff = new SQLite('./Database/sqlite/config/onoff.sqlite');
        client.getCommandAdmin = sql_Onoff.prepare("SELECT * FROM command_admin");
        for (const row_ChannelAdmin of client.getCommandAdmin./*iterate*/all()) {
            if(row_ChannelAdmin.React === true) {
                const adminchannel1 = configchannel.admin.admin1;
                const adminchannel2 = configchannel.admin.admin2;
                const adminchannel3 = configchannel.admin.admin3;
                const adminchannel4 = configchannel.admin.admin4;
                const adminchannel5 = configchannel.admin.admin5;
                const admin1 = configrole.admin.admin1;
                const admin2 = configrole.admin.admin2;
                const admin3 = configrole.admin.admin3;
                const admin4 = configrole.admin.admin4;
                const admin5 = configrole.admin.admin5;
                if(message.channel.id === adminchannel1 || message.channel.id === adminchannel2 || message.channel.id === adminchannel3 || message.channel.id === adminchannel4 || message.channel.id === adminchannel5) {
                    if(message.member.roles.cache.has(admin1) || message.member.roles.cache.has(admin2) || message.member.roles.cache.has(admin3) || message.member.roles.cache.has(admin4) || message.member.roles.cache.has(admin5)) {
                        message.clan.channels.fetch(roleChannel1).then(channel => {
                            channel.messages.fetch(rolemessage1).then(message => {
                                message.react("‚õèÔ∏è");
                                message.react("<:EmoteSus:810274377098199050>");
                                message.react("<:EmotePhasmo:810274402422882345>");
                                // message.react("üçµ");
                            })
                        })
                        console.log(chalk.cyan('[' + DateTime.utc().toFormat(timeFormat) + ']' + lang.prefix.clan, chalk.white(lang.admin.react.log)));
                    } else {
                        console.log(chalk.cyan('[' + DateTime.utc().toFormat(timeFormat) + ']' + lang.prefix.clan, chalk.white(lang.admin.react.errorperms)));
                    }
                } else {
                    console.log(chalk.cyan('[' + DateTime.utc().toFormat(timeFormat) + ']' + lang.prefix.clan, chalk.white(lang.admin.react.errorchannel)));
                }
            }
        }
    }
}